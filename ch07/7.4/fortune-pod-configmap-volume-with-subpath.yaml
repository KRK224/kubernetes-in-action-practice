apiVersion: v1
kind: Pod
metadata:
  name: fortune-configmap-volume
  labels:
    app: fortune
    type: configmap-volume
spec:
  containers:
  - image: krk224tmax/fortune:env
    name: html-generator
    volumeMounts:
    - name: html
      mountPath: /var/htdocs
    imagePullPolicy: Always
    env:
    - name: INTERVAL
      valueFrom:
        configMapKeyRef:
          name: fortune-config
          key: sleep-interval
    - name: NODE_ENV
      valueFrom:
        configMapKeyRef:
          name: fortune-config
          key: env
          optional: true
  - image: nginx:alpine
    name: web-server
    volumeMounts:
    - name: html
      mountPath: /usr/share/nginx/html
      readOnly: true
    - name: config  # 볼륨 이름
      mountPath: /etc/nginx/conf.d/someconfig.conf  # 생성할 파일 이름
      subPath: my-nginx-config.conf  # 전체 볼륨 자체를 마운트하는 것이 아닌 특정 파일이나 디렉토리를 마운트, configMap Volume 외에도 모든 volume에서 사용 가능
      readOnly: true
    ports:
    - containerPort: 80
      name: http
      protocol: TCP
  volumes:
  - name: html
    emptyDir: {}
  - name: config
    configMap:
      name: fortune-config  # items와 다르게 모든 configmap key를 볼륨으로 생성
---
# svc 잠시 리마인드용 작성
apiVersion: v1
kind: Service
metadata:
  name: fortune-svc-volume
spec:
  type: LoadBalancer
  ports:
  - port: 3000 # 해당 서비스의 포트
    targetPort: 80 # 컨테이너 포트
  selector: # 여러개 적으면 AND 연산으로 동작
    type: configmap-volume
    app: fortune
